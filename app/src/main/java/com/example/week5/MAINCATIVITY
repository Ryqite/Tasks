
                val navController = rememberNavController()
                NavHost(
                    navController = navController,
                    startDestination = "ProductsScreen"
                ) {
                    composable("ProductsScreen") {
                        ProductsScreen(products,
                            profileScreen = {
                                navController.navigate("ProfileScreen")
                            },
                            detailScreen = { productId ->
                                navController.navigate("DetailScreen/$productId")
                            },
                            navigateToProductPage = {
                                navController.navigate("ProductsScreen")
                            },
                            navigateToBasketPage = {
                                navController.navigate("BasketScreen")
                            })
                    }
                    composable(
                        route = "DetailScreen/{productId}",
                        arguments = listOf(
                            navArgument("productId") {
                                type = NavType.IntType
                                defaultValue = 0
                                nullable = false
                            }),
                        deepLinks = listOf(
                            navDeepLink { uriPattern = "https://example.com/DetailScreen/{productId}" }
                        )
                    )
                    { backStackEntry ->
                        val productId = backStackEntry.arguments?.getInt("productId") ?: 0
                        val certainProduct = products.find { it.id == productId }
                        DetailScreen(certainProduct,
                            addToBascket = {
                                if (certainProduct != null) {
                                    productsForBuy.add(certainProduct)
                                }
                            },
                            backIcon = {
                                navController.popBackStack()
                            },
                            navigateToProductPage = {
                                navController.navigate("ProductsScreen")
                            },
                            navigateToBasketPage = {
                                navController.navigate("BasketScreen")
                            })
                    }
                    composable("BasketScreen") {
                        BasketScreen(productsForBuy,
                            deleteFromBasket = { productId ->
                                productsForBuy.removeAll { it.id == productId }
                            },
                            backIcon = {
                                navController.popBackStack()
                            },
                            navigateToProductPage = {
                                navController.navigate("ProductsScreen")
                            },
                            navigateToBasketPage = {
                                navController.navigate("BasketScreen")
                            })
                    }
                    composable("ProfileScreen") {
                        ProfileScreen(
                            backIcon = {
                                navController.popBackStack()
                            }
                        )
                    }
                }